groups: []
jobs:
- name: wipe-env
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - config:
          image_resource:
            source:
              repository: cloudfoundry/cflinuxfs2
            type: docker-image
          inputs:
          - name: pcf-pipelines-tarball
          outputs:
          - name: pcf-pipelines
          platform: linux
          run:
            args:
            - -c
            - tar -xvf pcf-pipelines-tarball/*.tgz
            path: sh
        task: unpack-tarball
    - get: tfstate
    - get: tfstate-version
      params:
        bump: major
  - file: pcf-pipelines/tasks/install-pcf-gcp/wipe-env.yml
    params:
      GCP_PROJECT_ID: {{gcp_project_id}}
      GCP_REGION: {{gcp_region}}
      GCP_SERVICE_ACCOUNT_KEY: {{gcp_service_account_key}}
    task: wipe
  - params:
      file: wipe-output/*.tfstate
    put: tfstate
  - params:
      file: tfstate-version/version
    put: tfstate-version
  serial_groups:
  - terraform
- name: upload-opsman-image
  plan:
  - do:
    - get: pcf-pipelines-tarball
    - config:
        image_resource:
          source:
            repository: cloudfoundry/cflinuxfs2
          type: docker-image
        inputs:
        - name: pcf-pipelines-tarball
        outputs:
        - name: pcf-pipelines
        platform: linux
        run:
          args:
          - -c
          - tar -xvf pcf-pipelines-tarball/*.tgz
          path: sh
      task: unpack-tarball
  - get: pivnet-opsmgr
    params:
      globs:
      - '*GCP.yml'
    trigger: true
  - file: pcf-pipelines/tasks/install-pcf-gcp/upload-opsman.yml
    params:
      GCP_PROJECT_ID: {{gcp_project_id}}
      GCP_REGION: {{gcp_region}}
      GCP_SERVICE_ACCOUNT_KEY: {{gcp_service_account_key}}
    task: upload
- name: create-infrastructure
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - config:
          image_resource:
            source:
              repository: cloudfoundry/cflinuxfs2
            type: docker-image
          inputs:
          - name: pcf-pipelines-tarball
          outputs:
          - name: pcf-pipelines
          platform: linux
          run:
            args:
            - -c
            - tar -xvf pcf-pipelines-tarball/*.tgz
            path: sh
        task: unpack-tarball
    - get: pivnet-opsmgr
      params:
        globs:
        - '*GCP.yml'
      passed:
      - upload-opsman-image
    - get: tfstate-version
      params:
        bump: major
  - file: pcf-pipelines/tasks/install-pcf-gcp/create-infrastructure.yml
    on_failure:
      file: pcf-pipelines/tasks/install-pcf-gcp/rollback-create-infrastructure.yml
      params:
        GCP_PROJECT_ID: {{gcp_project_id}}
        GCP_REGION: {{gcp_region}}
        GCP_SERVICE_ACCOUNT_KEY: {{gcp_service_account_key}}
      task: rollback
    params:
      ERT_SQL_DB_PASSWORD: {{ert_sql_db_password}}
      ERT_SQL_DB_USERNAME: {{ert_sql_db_username}}
      GCP_PROJECT_ID: {{gcp_project_id}}
      GCP_REGION: {{gcp_region}}
      GCP_RESOURCE_PREFIX: {{gcp_resource_prefix}}
      GCP_SERVICE_ACCOUNT_KEY: {{gcp_service_account_key}}
      GCP_ZONE_1: {{gcp_zone_1}}
      GCP_ZONE_2: {{gcp_zone_2}}
      GCP_ZONE_3: {{gcp_zone_3}}
      PCF_ERT_DOMAIN: {{pcf_ert_domain}}
      PCF_ERT_SSL_CERT: {{pcf_ert_ssl_cert}}
      PCF_ERT_SSL_KEY: {{pcf_ert_ssl_key}}
    task: create-infrastructure
  - params:
      file: create-infrastructure-output/*.tfstate
    put: tfstate
  - params:
      file: tfstate-version/version
    put: tfstate-version
  serial_groups:
  - terraform
- name: configure-director
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - config:
          image_resource:
            source:
              repository: cloudfoundry/cflinuxfs2
            type: docker-image
          inputs:
          - name: pcf-pipelines-tarball
          outputs:
          - name: pcf-pipelines
          platform: linux
          run:
            args:
            - -c
            - tar -xvf pcf-pipelines-tarball/*.tgz
            path: sh
        task: unpack-tarball
    - get: tool-om
      params:
        globs:
        - om-linux
  - file: pcf-pipelines/tasks/install-pcf-gcp/check-opsman-dns.yml
    params:
      pcf_ert_domain: {{pcf_ert_domain}}
    task: check-opsman-dns
  - file: pcf-pipelines/tasks/install-pcf-gcp/config-opsman-auth.yml
    params:
      pcf_ert_domain: {{pcf_ert_domain}}
      pcf_opsman_admin_password: {{pcf_opsman_admin_password}}
      pcf_opsman_admin_username: {{pcf_opsman_admin_username}}
    task: configure-opsman-auth
  - file: pcf-pipelines/tasks/install-pcf-gcp/config-director.yml
    params:
      gcp_proj_id: {{gcp_project_id}}
      gcp_region: {{gcp_region}}
      gcp_resource_prefix: {{gcp_resource_prefix}}
      gcp_svc_acct_key: {{gcp_service_account_key}}
      gcp_zone_1: {{gcp_zone_1}}
      gcp_zone_2: {{gcp_zone_2}}
      gcp_zone_3: {{gcp_zone_3}}
      pcf_ert_domain: {{pcf_ert_domain}}
      pcf_opsman_admin: {{pcf_opsman_admin_username}}
      pcf_opsman_admin_passwd: {{pcf_opsman_admin_password}}
    task: configure-director
  serial_groups:
  - opsman
- name: deploy-director
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - config:
          image_resource:
            source:
              repository: cloudfoundry/cflinuxfs2
            type: docker-image
          inputs:
          - name: pcf-pipelines-tarball
          outputs:
          - name: pcf-pipelines
          platform: linux
          run:
            args:
            - -c
            - tar -xvf pcf-pipelines-tarball/*.tgz
            path: sh
        task: unpack-tarball
    - get: tool-om
      params:
        globs:
        - om-linux
      passed:
      - configure-director
      trigger: true
  - file: pcf-pipelines/tasks/install-pcf-gcp/deploy-director.yml
    params:
      pcf_ert_domain: {{pcf_ert_domain}}
      pcf_opsman_admin_password: {{pcf_opsman_admin_password}}
      pcf_opsman_admin_username: {{pcf_opsman_admin_username}}
    task: deploy-director
  serial_groups:
  - opsman
- name: upload-ert
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - config:
          image_resource:
            source:
              repository: cloudfoundry/cflinuxfs2
            type: docker-image
          inputs:
          - name: pcf-pipelines-tarball
          outputs:
          - name: pcf-pipelines
          platform: linux
          run:
            args:
            - -c
            - tar -xvf pcf-pipelines-tarball/*.tgz
            path: sh
        task: unpack-tarball
    - get: pivnet-elastic-runtime
      params:
        globs:
        - '*pivotal'
    - get: tool-om
      params:
        globs:
        - om-linux
      passed:
      - deploy-director
      trigger: true
  - file: pcf-pipelines/tasks/install-ert/upload-ert.yml
    params:
      pcf_ert_domain: {{pcf_ert_domain}}
      pcf_opsman_admin: {{pcf_opsman_admin_username}}
      pcf_opsman_admin_passwd: {{pcf_opsman_admin_password}}
    task: upload
  serial_groups:
  - opsman
- name: deploy-ert
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - config:
          image_resource:
            source:
              repository: cloudfoundry/cflinuxfs2
            type: docker-image
          inputs:
          - name: pcf-pipelines-tarball
          outputs:
          - name: pcf-pipelines
          platform: linux
          run:
            args:
            - -c
            - tar -xvf pcf-pipelines-tarball/*.tgz
            path: sh
        task: unpack-tarball
    - get: tool-om
      params:
        globs:
        - om-linux
      passed:
      - upload-ert
      trigger: true
  - file: pcf-pipelines/tasks/install-ert/configure-json.yml
    params:
      db_app_usage_service_password: {{db_app_usage_service_password}}
      db_app_usage_service_username: {{db_app_usage_service_username}}
      db_autoscale_password: {{db_autoscale_password}}
      db_autoscale_username: {{db_autoscale_username}}
      db_ccdb_password: {{db_ccdb_password}}
      db_ccdb_username: {{db_ccdb_username}}
      db_diego_password: {{db_diego_password}}
      db_diego_username: {{db_diego_username}}
      db_notifications_password: {{db_notifications_password}}
      db_notifications_username: {{db_notifications_username}}
      db_routing_password: {{db_routing_password}}
      db_routing_username: {{db_routing_username}}
      db_uaa_password: {{db_uaa_password}}
      db_uaa_username: {{db_uaa_username}}
      ert_sql_db_password: {{ert_sql_db_password}}
      ert_sql_db_username: {{ert_sql_db_username}}
      gcp_proj_id: {{gcp_project_id}}
      gcp_region: {{gcp_region}}
      gcp_storage_access_key: {{gcp_storage_access_key}}
      gcp_storage_secret_key: {{gcp_storage_secret_key}}
      gcp_svc_acct_key: {{gcp_service_account_key}}
      pcf_ert_domain: {{pcf_ert_domain}}
      pcf_ert_ssl_cert: generate
      pcf_ert_ssl_key: {{pcf_ert_ssl_key}}
      pcf_iaas: gcp
      pcf_opsman_admin: {{pcf_opsman_admin_username}}
      pcf_opsman_admin_passwd: {{pcf_opsman_admin_password}}
      terraform_prefix: {{gcp_resource_prefix}}
      terraform_template: c0-gcp-poc
    task: configure-json
  - file: pcf-pipelines/tasks/install-ert/configure-ert.yml
    params:
      pcf_az_1: {{gcp_zone_1}}
      pcf_az_2: {{gcp_zone_2}}
      pcf_az_3: {{gcp_zone_3}}
      pcf_ert_domain: {{pcf_ert_domain}}
      pcf_ert_ssl_cert: generate
      pcf_ert_ssl_key: {{pcf_ert_ssl_key}}
      pcf_iaas: gcp
      pcf_opsman_admin: {{pcf_opsman_admin_username}}
      pcf_opsman_admin_passwd: {{pcf_opsman_admin_password}}
      terraform_prefix: {{gcp_resource_prefix}}
      terraform_template: c0-gcp-poc
    task: configure-ert
  - file: pcf-pipelines/tasks/install-ert/deploy-ert.yml
    params:
      pcf_ert_domain: {{pcf_ert_domain}}
      pcf_opsman_admin: {{pcf_opsman_admin_username}}
      pcf_opsman_admin_passwd: {{pcf_opsman_admin_password}}
    task: deploy
  serial_groups:
  - opsman
resource_types:
- name: pivnet
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
  type: docker-image
resources:
- name: pcf-pipelines-tarball
  source:
    api_token: {{pivnet_token}}
    product_slug: pcf-automation
    product_version: v0.11.0
  type: pivnet
- name: tfstate
  source:
    access_key_id: {{s3_access_key_id}}
    bucket: {{s3_bucket_terraform}}
    endpoint: {{s3_endpoint}}
    regexp: terraform/terraform-(.*).tfstate
    region_name: {{s3_region}}
    secret_access_key: {{s3_secret_access_key}}
  type: s3
- name: tfstate-version
  source:
    access_key_id: {{s3_access_key_id}}
    bucket: {{s3_bucket_terraform}}
    driver: s3
    endpoint: {{s3_endpoint}}
    initial_version: 0.0.0
    key: terraform/version
    region_name: {{s3_region}}
    secret_access_key: {{s3_secret_access_key}}
  type: semver
- check_every: 4h
  name: pivnet-opsmgr
  source:
    api_token: {{pivnet_token}}
    product_slug: ops-manager
    product_version: {{opsman_major_minor_version}}
    sort_by: semver
  type: pivnet
- check_every: 4h
  name: pivnet-elastic-runtime
  source:
    api_token: {{pivnet_token}}
    product_slug: elastic-runtime
    product_version: {{ert_major_minor_version}}
    sort_by: semver
  type: pivnet
- name: tool-om
  source:
    access_token: {{github_token}}
    repository: om
    user: pivotal-cf
  type: github-release
