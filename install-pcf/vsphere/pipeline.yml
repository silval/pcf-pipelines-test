jobs:
- name: install-opsmgr
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - config:
          image_resource:
            source:
              repository: cloudfoundry/cflinuxfs2
            type: docker-image
          inputs:
          - name: pcf-pipelines-tarball
          outputs:
          - name: pcf-pipelines
          platform: linux
          run:
            args:
            - -c
            - tar -xvf pcf-pipelines-tarball/*.tgz
            path: sh
        task: unpack-tarball
    - get: govc
      params:
        globs:
        - '*linux_amd64*'
    - get: tool-om
      params:
        globs:
        - '*linux*'
    - get: pivnet-opsman-product
      params:
        globs:
        - '*.ova'
      trigger: true
  - file: pcf-pipelines/tasks/import-opsman/task.yml
    params:
      GOVC_DATACENTER: {{vcenter_data_center}}
      GOVC_DATASTORE: {{om_data_store}}
      GOVC_HOST: {{om_vm_host}}
      GOVC_INSECURE: 1
      GOVC_NETWORK: {{om_vm_network}}
      GOVC_PASSWORD: {{vcenter_pwd}}
      GOVC_RESOURCE_POOL: {{om_resource_pool}}
      GOVC_URL: {{vcenter_host}}
      GOVC_USERNAME: {{vcenter_usr}}
      OM_DISK_TYPE: {{om_disk_type}}
      OM_DNS_SERVERS: {{om_dns_servers}}
      OM_GATEWAY: {{om_gateway}}
      OM_IP: {{om_ip}}
      OM_NETMASK: {{om_netmask}}
      OM_NTP_SERVERS: {{om_ntp_servers}}
      OM_RESOURCE_POOL: {{om_resource_pool}}
      OM_VM_NAME: {{om_vm_name}}
      OM_VM_NETWORK: {{om_vm_network}}
      OM_VM_POWER_STATE: {{om_vm_power_state}}
      OPS_MGR_HOST: {{opsman_uri}}
      OPS_MGR_SSH_PWD: {{om_ssh_pwd}}
    task: deploy-opsman
  - file: pcf-pipelines/tasks/config-opsman/task.yml
    params:
      OM_DECRYPTION_PWD: {{om_decryption_pwd}}
      OPS_MGR_HOST: {{opsman_uri}}
      OPS_MGR_PWD: {{opsman_admin_password}}
      OPS_MGR_USR: {{opsman_admin_username}}
    task: config-opsman
- name: configure-ops-director
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - config:
          image_resource:
            source:
              repository: cloudfoundry/cflinuxfs2
            type: docker-image
          inputs:
          - name: pcf-pipelines-tarball
          outputs:
          - name: pcf-pipelines
          platform: linux
          run:
            args:
            - -c
            - tar -xvf pcf-pipelines-tarball/*.tgz
            path: sh
        task: unpack-tarball
    - get: tool-om
      params:
        globs:
        - '*linux*'
      passed:
      - install-opsmgr
      trigger: true
  - file: pcf-pipelines/tasks/config-opsdir/task.yml
    params:
      AZ_1: {{az_1_name}}
      AZ_1_CUSTER_NAME: {{az_1_cluster_name}}
      AZ_1_RP_NAME: {{az_1_rp_name}}
      AZ_2: {{az_2_name}}
      AZ_2_CUSTER_NAME: {{az_2_cluster_name}}
      AZ_2_RP_NAME: {{az_2_rp_name}}
      AZ_3: {{az_3_name}}
      AZ_3_CUSTER_NAME: {{az_3_cluster_name}}
      AZ_3_RP_NAME: {{az_3_rp_name}}
      DEPLOYMENT_EXCLUDED_RANGE: {{deployment_excluded_range}}
      DEPLOYMENT_NETWORK_NAME: {{deployment_network_name}}
      DEPLOYMENT_NW_AZS: {{deployment_nw_azs}}
      DEPLOYMENT_NW_CIDR: {{deployment_nw_cidr}}
      DEPLOYMENT_NW_DNS: {{deployment_nw_dns}}
      DEPLOYMENT_NW_GATEWAY: {{deployment_nw_gateway}}
      DEPLOYMENT_VCENTER_NETWORK: {{deployment_vsphere_network}}
      DYNAMIC_SERVICES_EXCLUDED_RANGE: {{dynamic_services_excluded_range}}
      DYNAMIC_SERVICES_NETWORK_NAME: {{dynamic_services_network_name}}
      DYNAMIC_SERVICES_NW_AZS: {{dynamic_services_nw_azs}}
      DYNAMIC_SERVICES_NW_CIDR: {{dynamic_services_nw_cidr}}
      DYNAMIC_SERVICES_NW_DNS: {{dynamic_services_nw_dns}}
      DYNAMIC_SERVICES_NW_GATEWAY: {{dynamic_services_nw_gateway}}
      DYNAMIC_SERVICES_VCENTER_NETWORK: {{dynamic_services_vsphere_network}}
      ENABLE_VM_RESURRECTOR: {{enable_vm_resurrector}}
      EPHEMERAL_STORAGE_NAMES: {{ephemeral_storage_names}}
      GENERATE_VM_PASSWORDS: {{generate_vm_passwords}}
      ICMP_CHECKS_ENABLED: {{icmp_checks_enabled}}
      INFRA_EXCLUDED_RANGE: {{infra_excluded_range}}
      INFRA_NETWORK_NAME: {{infra_network_name}}
      INFRA_NW_AZS: {{infra_nw_azs}}
      INFRA_NW_CIDR: {{infra_nw_cidr}}
      INFRA_NW_DNS: {{infra_nw_dns}}
      INFRA_NW_GATEWAY: {{infra_nw_gateway}}
      INFRA_VCENTER_NETWORK: {{infra_vsphere_network}}
      MAX_THREADS: {{max_threads}}
      NTP_SERVERS: {{ntp_servers}}
      OPS_DIR_HOSTNAME: {{ops_dir_hostname}}
      OPS_MGR_HOST: {{opsman_uri}}
      OPS_MGR_PWD: {{opsman_admin_password}}
      OPS_MGR_USR: {{opsman_admin_username}}
      PERSISTENT_STORAGE_NAMES: {{persistent_storage_names}}
      SERVICES_EXCLUDED_RANGE: {{services_excluded_range}}
      SERVICES_NETWORK_NAME: {{services_network_name}}
      SERVICES_NW_AZS: {{services_nw_azs}}
      SERVICES_NW_CIDR: {{services_nw_cidr}}
      SERVICES_NW_DNS: {{services_nw_dns}}
      SERVICES_NW_GATEWAY: {{services_nw_gateway}}
      SERVICES_VCENTER_NETWORK: {{services_vsphere_network}}
      TRUSTED_CERTIFICATES: {{trusted_certificates}}
      VCENTER_DATA_CENTER: {{vcenter_data_center}}
      VCENTER_DISK_TYPE: {{vm_disk_type}}
      VCENTER_HOST: {{vcenter_host}}
      VCENTER_PWD: {{vcenter_pwd}}
      VCENTER_USR: {{vcenter_usr}}
    task: config-opsdir
- name: opsman-apply-changes
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - config:
          image_resource:
            source:
              repository: cloudfoundry/cflinuxfs2
            type: docker-image
          inputs:
          - name: pcf-pipelines-tarball
          outputs:
          - name: pcf-pipelines
          platform: linux
          run:
            args:
            - -c
            - tar -xvf pcf-pipelines-tarball/*.tgz
            path: sh
        task: unpack-tarball
    - get: tool-om
      params:
        globs:
        - '*linux*'
      passed:
      - configure-ops-director
      resource: tool-om
      trigger: true
  - file: pcf-pipelines/tasks/apply-changes/task.yml
    params:
      OPSMAN_PASSWORD: {{opsman_admin_password}}
      OPSMAN_TIMEOUT: {{opsman_timeout_seconds}}
      OPSMAN_URI: {{opsman_uri}}
      OPSMAN_USERNAME: {{opsman_admin_username}}
    task: apply-changes
- name: upload-elastic-runtime-tile
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - config:
          image_resource:
            source:
              repository: cloudfoundry/cflinuxfs2
            type: docker-image
          inputs:
          - name: pcf-pipelines-tarball
          outputs:
          - name: pcf-pipelines
          platform: linux
          run:
            args:
            - -c
            - tar -xvf pcf-pipelines-tarball/*.tgz
            path: sh
        task: unpack-tarball
    - get: pivnet-product
      params:
        globs:
        - '*.pivotal'
      resource: elastic-runtime
    - get: tool-om
      params:
        globs:
        - '*linux*'
      passed:
      - opsman-apply-changes
      trigger: true
    - get: pivnet-cli
      params:
        globs:
        - '*linux-amd64*'
  - file: pcf-pipelines/tasks/upload-product-and-stemcell/task.yml
    params:
      NO_PROXY: {{company_proxy_domain}}
      OM_IP: {{om_ip}}
      OPS_MGR_HOST: {{opsman_uri}}
      OPS_MGR_PWD: {{opsman_admin_password}}
      OPS_MGR_USR: {{opsman_admin_username}}
      PIVNET_API_TOKEN: {{pivnet_token}}
    task: upload-er-tile
- name: config-elastic-runtime-tile
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - config:
          image_resource:
            source:
              repository: cloudfoundry/cflinuxfs2
            type: docker-image
          inputs:
          - name: pcf-pipelines-tarball
          outputs:
          - name: pcf-pipelines
          platform: linux
          run:
            args:
            - -c
            - tar -xvf pcf-pipelines-tarball/*.tgz
            path: sh
        task: unpack-tarball
    - get: tool-om
      params:
        globs:
        - '*linux*'
      passed:
      - upload-elastic-runtime-tile
      trigger: true
  - file: pcf-pipelines/tasks/config-ert/task.yml
    params:
      ALLOW_APP_SSH_ACCESS: {{allow_app_ssh_access}}
      APPS_DOMAIN: {{apps_domain}}
      AUTHENTICATION_MODE: {{authentication_mode}}
      BACKUP_PREPARE_INSTANCES: {{backup_prepare_instances}}
      CCDB_INSTANCES: {{ccdb_instances}}
      CLOCK_GLOBAL_INSTANCES: {{clock_global_instances}}
      CLOUD_CONTROLLER_INSTANCES: {{cloud_controller_instances}}
      CLOUD_CONTROLLER_WORKER_INSTANCES: {{cloud_controller_worker_instances}}
      COMPANY_NAME: {{company_name}}
      CONSUL_SERVER_INSTANCES: {{consul_server_instances}}
      DEFAULT_QUOTA_MAX_SERVICES_COUNT: {{default_quota_max_number_services}}
      DEFAULT_QUOTA_MEMORY_LIMIT_IN_MB: {{default_quota_memory_limit_mb}}
      DEPLOYMENT_NW_AZS: {{deployment_nw_azs}}
      DIEGO_BRAIN_INSTANCES: {{diego_brain_instances}}
      DIEGO_CELL_INSTANCES: {{diego_cell_instances}}
      DIEGO_DATABASE_INSTANCES: {{diego_database_instances}}
      DISABLE_HTTP_PROXY: {{disable_http_proxy}}
      DISABLE_INSECURE_COOKIES: {{disable_insecure_cookies}}
      DOPPLER_INSTANCES: {{doppler_instances}}
      ENABLE_SECURITY_EVENT_LOGGING: {{enable_security_event_logging}}
      ERT_SINGLETON_JOB_AZ: {{ert_singleton_job_az}}
      ETCD_TLS_SERVER_INSTANCES: {{etcd_tls_server_instances}}
      FIRST_NAME_ATTR: {{first_name_attribute}}
      GARDEN_NETWORK_MTU: {{garden_network_mtu}}
      GARDEN_NETWORK_POOL_CIDR: {{garden_network_pool_cidr}}
      GROUP_SEARCH_BASE: {{group_search_base}}
      GROUP_SEARCH_FILTER: {{group_search_filter}}
      HA_PROXY_INSTANCES: {{ha_proxy_instances}}
      HA_PROXY_IPS: {{ha_proxy_ips}}
      IGNORE_SSL_CERT: {{ignore_ssl_cert_verification}}
      LAST_NAME_ATTR: {{last_name_attribute}}
      LDAP_PWD: {{ldap_pwd}}
      LDAP_URL: {{ldap_url}}
      LDAP_USER: {{ldap_user}}
      LOGGREGATOR_ENDPOINT_PORT: {{loggregator_endpoint_port}}
      LOGGREGATOR_TC_INSTANCES: {{loggregator_traffic_controller_instances}}
      MAIL_ATTR_NAME: {{mail_attribute_name}}
      MYSQL_BACKUPS: {{mysql_backups}}
      MYSQL_INSTANCES: {{mysql_instances}}
      MYSQL_MONITOR_EMAIL: {{mysql_monitor_email}}
      MYSQL_MONITOR_INSTANCES: {{mysql_monitor_instances}}
      MYSQL_PROXY_INSTANCES: {{mysql_proxy_instances}}
      NATS_INSTANCES: {{nats_instances}}
      NETWORK_NAME: {{deployment_network_name}}
      NFS_SERVER_INSTANCES: {{nfs_server_instances}}
      OPS_MGR_GENERATE_SSL_ENDPOINT: {{om_generate_ssl_endpoint}}
      OPS_MGR_HOST: {{opsman_uri}}
      OPS_MGR_PWD: {{opsman_admin_password}}
      OPS_MGR_USR: {{opsman_admin_username}}
      ROUTE_SERVICES: {{route_services}}
      ROUTER_INSTANCES: {{router_instances}}
      ROUTER_REQUEST_TIMEOUT_IN_SEC: {{router_request_timeout_in_seconds}}
      ROUTER_STATIC_IPS: {{router_static_ips}}
      SEARCH_BASE: {{search_base}}
      SEARCH_FILTER: {{search_filter}}
      SECURITY_ACKNOWLEDGEMENT: {{security_acknowledgement}}
      SKIP_CERT_VERIFY: {{skip_cert_verify}}
      SMTP_ADDRESS: {{smtp_address}}
      SMTP_AUTH_MECHANISM: {{smtp_auth_mechanism}}
      SMTP_FROM: {{smtp_from}}
      SMTP_PORT: {{smtp_port}}
      SMTP_PWD: {{smtp_pwd}}
      SMTP_USER: {{smtp_user}}
      SSH_STATIC_IPS: {{ssh_static_ips}}
      SSL_CERT: {{ssl_cert}}
      SSL_PRIVATE_KEY: {{ssl_private_key}}
      SSL_TERMINATION: {{ssl_termination_point}}
      SYSLOG_DRAIN_BUFFER_SIZE: {{syslog_drain_buffer_size}}
      SYSLOG_HOST: {{syslog_host}}
      SYSLOG_PORT: {{syslog_port}}
      SYSLOG_PROTOCOL: {{syslog_protocol}}
      SYSTEM_DOMAIN: {{system_domain}}
      TCP_ROUTER_INSTANCES: {{tcp_router_instances}}
      TCP_ROUTER_STATIC_IPS: {{tcp_router_static_ips}}
      TCP_ROUTING: {{tcp_routing}}
      TCP_ROUTING_PORTS: {{tcp_routing_ports}}
      UAA_INSTANCES: {{uaa_instances}}
      UAADB_INSTANCES: {{uaadb_instances}}
    task: config-er-tile
- name: product-apply-changes
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - config:
          image_resource:
            source:
              repository: cloudfoundry/cflinuxfs2
            type: docker-image
          inputs:
          - name: pcf-pipelines-tarball
          outputs:
          - name: pcf-pipelines
          platform: linux
          run:
            args:
            - -c
            - tar -xvf pcf-pipelines-tarball/*.tgz
            path: sh
        task: unpack-tarball
    - get: tool-om
      params:
        globs:
        - '*linux*'
      passed:
      - config-elastic-runtime-tile
      trigger: true
  - file: pcf-pipelines/tasks/apply-changes/task.yml
    params:
      OPSMAN_PASSWORD: {{opsman_admin_password}}
      OPSMAN_TIMEOUT: {{opsman_timeout_seconds}}
      OPSMAN_URI: {{opsman_uri}}
      OPSMAN_USERNAME: {{opsman_admin_username}}
    task: apply-changes
- name: disable-errands
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - config:
          image_resource:
            source:
              repository: cloudfoundry/cflinuxfs2
            type: docker-image
          inputs:
          - name: pcf-pipelines-tarball
          outputs:
          - name: pcf-pipelines
          platform: linux
          run:
            args:
            - -c
            - tar -xvf pcf-pipelines-tarball/*.tgz
            path: sh
        task: unpack-tarball
    - get: tool-om
      params:
        globs:
        - '*linux*'
      passed:
      - product-apply-changes
      trigger: true
  - file: pcf-pipelines/tasks/disable-ert-errands/task.yml
    params:
      OPS_MGR_HOST: {{opsman_uri}}
      OPS_MGR_PWD: {{opsman_admin_password}}
      OPS_MGR_USR: {{opsman_admin_username}}
    task: disable-ert-errands
- name: post-apply-changes
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - config:
          image_resource:
            source:
              repository: cloudfoundry/cflinuxfs2
            type: docker-image
          inputs:
          - name: pcf-pipelines-tarball
          outputs:
          - name: pcf-pipelines
          platform: linux
          run:
            args:
            - -c
            - tar -xvf pcf-pipelines-tarball/*.tgz
            path: sh
        task: unpack-tarball
    - get: tool-om
      params:
        globs:
        - '*linux*'
      passed:
      - disable-errands
      trigger: true
  - file: pcf-pipelines/tasks/apply-changes/task.yml
    params:
      OPSMAN_PASSWORD: {{opsman_admin_password}}
      OPSMAN_TIMEOUT: {{opsman_timeout_seconds}}
      OPSMAN_URI: {{opsman_uri}}
      OPSMAN_USERNAME: {{opsman_admin_username}}
    task: apply-changes
resource_types:
- name: pivnet
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
  type: docker-image
resources:
- name: govc
  source:
    access_token: {{github_token}}
    repository: govmomi
    user: vmware
  type: github-release
- name: tool-om
  source:
    access_token: {{github_token}}
    repository: om
    user: pivotal-cf
  type: github-release
- name: pivnet-cli
  source:
    access_token: {{github_token}}
    repository: pivnet-cli
    user: pivotal-cf
  type: github-release
- name: pcf-pipelines-tarball
  source:
    api_token: {{pivnet_token}}
    product_slug: pcf-automation
    product_version: v0.11.0
  type: pivnet
- name: pivnet-opsman-product
  source:
    api_token: {{pivnet_token}}
    product_slug: ops-manager
  type: pivnet
- name: elastic-runtime
  source:
    api_token: {{pivnet_token}}
    product_slug: elastic-runtime
  type: pivnet
